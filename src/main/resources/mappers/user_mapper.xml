<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.memorious.back.repository.UserMapper">
    <resultMap id="userMap" type="com.memorious.back.entity.User">
<!--        property: User entity의 멤버 변수명, column: DB의 컬럼명 -->
        <id property="userId" column="user_id" />
        <result property="email" column="email" />
        <result property="nickname" column="nickname" />
        <result property="enabled" column="enabled" />
        <result property="oauth2Id" column="oauth2_Id" />
        <result property="provider" column="provider" />
    </resultMap>
    <insert id="saveUser" parameterType="com.memorious.back.entity.User">
        insert into user_tb(user_id, email, nickname, oauth2_id, provider)
        values(0, #{email}, #{nickname}, #{oauth2Id}, #{provider})
    </insert>
    <select id="findUserByEmail" resultType="com.memorious.back.entity.User">
        select
            ut.user_id,
            ut.email,
            ut.nickname,
            ut.enabled,
            ut.oauth2_id,
            ut.provider
        from
            user_tb ut
        where
            ut.email = #{email}
    </select>
    <select id="findUserByOAuth2Id" resultMap="userMap">
        select
            user_id,
            email,
            nickname,
            enabled,
            oauth2_id,
            provider
        from
            user_tb
        where
            oauth2_id = #{oauth2Id}
    </select>
    <!--    중복체크(이메일/닉네임) -->
    <select id="checkDuplicate"
            parameterType="com.memorious.back.entity.User"
            resultType="java.lang.Integer">
        select
            (select
                if(count(*) > 0, 1, 0)
            from
                user_tb
            where
                email = #{email}
            )
            +
            (select
                if(count(*) > 0, 2, 0)
            from
                user_tb
            where
                nickname = #{nickname}
            )
        as result
    </select>
</mapper>